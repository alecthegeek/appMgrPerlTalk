How to use Perl and associated tools to manage large scale application
environments when Puppet, Chef etc cannot be used. Includes a look at
the technical issues to be solved, useful CPAN modules, how to maintain
the data and how to structure the resulting framework and scripts.

This presentation is intended for technical application environment
managers who want to adopt an “infrastructure as code” approach, but do
not have access to the appropriate tools to assist them. Every
environment has different technical needs to solve. However attendees
should, after listening to the talk, have a good starting point on how
to approach these issues in their own organisations, no matter what
scripting language they use

The devops community has brought best practice use of automation tools
to the forefront of modern agile software delivery teams. However there
are a large number of environments where such tools are not available
for a variety reasons. Based on experience at a large financial
institution this paper looks at a “roll your own” approach when tools
like Puppet or Chef cannot be used. The problem solved is the set-up of
a large, complex, application and the presentation breaks the the
solution down into six major topics, some of which will be covered at a
high level because of time constraints.

* What needs to be done: Scope, Issues and Problems
* Technical barriers to be overcome: Security; User Interfaces;
Increasing complexity; Software Maintenance; Data Integrity; Error
Recovery; Business rules.
* Data Storage and maintenance.
* Useful CPAN Modules for: Templating; Data file access; Database
access; Logging; Email; Password generation; etc.
* How to structure the final solution for ease of extension,
installation and maintenance.
* Installing your own Perl and CPAN modules on restricted environments
